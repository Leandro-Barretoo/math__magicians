{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","Calculator","useState","total","next","state","myState","changeState","e","obj","buttonName","target","innerText","match","includes","parseFloat","className","colSpan","type","onClick","App","props","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEe,SAASA,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,MAAkB,MAAdD,EACK,oBAEFE,EAAIO,IAAIL,GAAKE,WAEtB,GAAkB,MAAdL,EACF,OAAOC,EAAIQ,IAAIN,GAAKE,WAEtB,MAAMK,MAAM,sBAAD,OAAuBV,EAAvB,M,WC4BEW,EA/CI,WAAO,IAAD,EACEC,mBAAS,CAAEC,MAAO,KAAMC,KAAM,KAAMd,UAAW,OADjD,mBAChBe,EADgB,KACTC,EADS,KAGjBC,EAAc,SAACC,GCQR,IAAmBC,EAAKC,EDPnCJ,EAAQ,2BAAKD,ICOiBI,EDPGJ,ECQhB,QADkBK,EDPKF,EAAEG,OAAOC,WCS1C,CACLT,MAAO,KACPC,KAAM,KACNd,UAAW,MAIFoB,EArBCG,MAAM,UAsBC,MAAfH,GAAmC,MAAbD,EAAIL,KACrB,GAGLK,EAAInB,UACFmB,EAAIL,KACC,CAAEA,KAAMK,EAAIL,KAAOM,GAErB,CAAEN,KAAMM,GAGbD,EAAIL,KACC,CACLA,KAAMK,EAAIL,KAAOM,EACjBP,MAAO,MAGJ,CACLC,KAAMM,EACNP,MAAO,MAIQ,MAAfO,EACED,EAAIL,KACFK,EAAIL,KAAKU,SAAS,KACb,GAEF,CAAEV,KAAK,GAAD,OAAKK,EAAIL,KAAT,MAEXK,EAAInB,UACC,CAAEc,KAAM,MAEbK,EAAIN,MACFM,EAAIN,MAAMW,SAAS,KACd,GAEF,CAAEX,MAAM,GAAD,OAAKM,EAAIN,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfO,GACED,EAAIL,MAAQK,EAAInB,UACX,CACLa,MAAOhB,EAAQsB,EAAIN,MAAOM,EAAIL,KAAMK,EAAInB,WACxCc,KAAM,KACNd,UAAW,MAKE,QAAfoB,EACED,EAAIL,KACC,2BAAKK,GAAZ,IAAiBL,OAAQ,EAAIW,WAAWN,EAAIL,OAAOT,aAEjDc,EAAIN,MACC,2BAAKM,GAAZ,IAAiBN,QAAS,EAAIY,WAAWN,EAAIN,QAAQR,aAEhD,GAYLc,EAAInB,UACC,CACLa,MAAOhB,EAAQsB,EAAIN,MAAOM,EAAIL,KAAMK,EAAInB,WACxCc,KAAM,KACNd,UAAWoB,GAOVD,EAAIL,KAKF,CACLD,MAAOM,EAAIL,KACXA,KAAM,KACNd,UAAWoB,GAPJ,CAAEpB,UAAWoB,ODjGtB,OACE,uBAAOM,UAAU,iBAAjB,SACE,kCACE,6BACE,oBAAIA,UAAU,kBAAkBC,QAAQ,IAAxC,SAA6CZ,EAAMD,MAASC,EAAMF,OAAS,QAE7E,+BACE,oBAAIa,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,kBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,mBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,mBAAd,SAAiC,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,uBAEnC,+BACE,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,mBAAd,SAAiC,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,oBAEnC,+BACE,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,mBAAd,SAAiC,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,oBAEnC,+BACE,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,mBAAd,SAAiC,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,oBAEnC,+BACE,oBAAIQ,UAAU,YAAYC,QAAQ,IAAlC,SAAsC,wBAAQD,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBACtC,oBAAIQ,UAAU,YAAd,SAA0B,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,iBAC1B,oBAAIQ,UAAU,mBAAd,SAAiC,wBAAQA,UAAU,MAAME,KAAK,SAASC,QAAS,SAACX,GAAQD,EAAYC,IAApE,0BE5B5BY,E,kDAZb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDhB,MAAQ,GAFI,E,0CAKnB,WACE,OACE,cAAC,EAAD,Q,GARYiB,IAAMC,WCExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05ffe3e2.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    if (numberTwo === '0') {\n      return 'Can\\'t devide by 0';\n    }\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport './Calculator.css';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [state, myState] = useState({ total: null, next: null, operation: null });\n\n  const changeState = (e) => {\n    myState({ ...state, ...calculate(state, e.target.innerText) });\n  };\n\n  return (\n    <table className=\"TableContainer\">\n      <tbody>\n        <tr>\n          <td className=\"TableCell Input\" colSpan=\"4\">{state.next || (state.total || '0')}</td>\n        </tr>\n        <tr>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>AC</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>+/-</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>%</button></td>\n          <td className=\"TableCell Orange\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>รท</button></td>\n        </tr>\n        <tr>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>7</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>8</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>9</button></td>\n          <td className=\"TableCell Orange\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>x</button></td>\n        </tr>\n        <tr>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>4</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>5</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>6</button></td>\n          <td className=\"TableCell Orange\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>-</button></td>\n        </tr>\n        <tr>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>1</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>2</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>3</button></td>\n          <td className=\"TableCell Orange\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>+</button></td>\n        </tr>\n        <tr>\n          <td className=\"TableCell\" colSpan=\"2\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>0</button></td>\n          <td className=\"TableCell\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>.</button></td>\n          <td className=\"TableCell Orange\"><button className=\"btn\" type=\"button\" onClick={(e) => { changeState(e); }}>=</button></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport Calculator from './components/Calculator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Calculator />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}